
public class Trie { //prefix trie for storing dictionary
	Trie[] subtries;
	boolean endofWord;
	
	public Trie() {
		subtries = new Trie[26]; //26 letters
		endofWord = false;
	}
	
	public void insert(String s) { //inserts String into root trie;
		Trie root = this;
		for(int x = 0; x < s.length(); x++) {
			if(root.subtries[s.charAt(x)-'A'] == null) {
				root.subtries[s.charAt(x)-'A'] = new Trie();
				
			}
			root = root.subtries[s.charAt(x)- 'A']; //go down one path
		}
		
		root.endofWord = true; //mark it as the end of the word	
			
		
		
	}
	
	public boolean search(String s) {// returns true if the String is found
		Trie root = this;
		for(int x = 0; x < s.length() x++) {
			if(root.subtries[s.charAt(x)-'A'] == null) {
				return false;
			}
			root = root.subtries[s.charAt(x)- 'A'];
			
		}
		
	}
	
	
	public static void main(String[] args) {
		Trie t = new Trie();
		t.insert("HELLO");
		
	}
	
}
